To start the server in databases folder use command:

    java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb 

    Not sure if this will work:
    java -Djava.library.path=./'databases/DynamoDBLocal_lib' -jar databases/DynamoDBLocal.jar -sharedDb 


You can test out the database functions using post_faker.py and scan.py in the "test" directory

Commands example:
Get a Post
curl -i -X GET  -H "Content-Type: application/json" -d \
'{"command":"report", "post_id":666}'  http://127.0.0.1:8000/Vote 


curl -i -X GET  -H "Content-Type: application/json" -d \
'{"command":"report", "post_id":666}'  http://127.0.0.1:8200/Vote 


Upvote 
curl -i -X PUT -H "Content-Type: application/json" -d \
'{"command":"upvote", "post_id":666}'  http://127.0.0.1:8000/Vote

curl -i -X PUT -H "Content-Type: application/json" -d \
'{"command":"upvote", "post_id":666}'  http://127.0.0.1:8200/Vote



Hot Posts from any community 
curl -i -X GET  -H "Content-Type: application/json" \
-d '{"command":"hot"}'  http://127.0.0.1:8000/Vote

curl -i -X GET  -H "Content-Type: application/json" \
-d '{"command":"hot"}'  http://127.0.0.1:8200/Vote


Top Posts from any community 
curl -i -X GET  -H "Content-Type: application/json" -d \
'{"command":"top"}'  http://127.0.0.1:8000/Vote

curl -i -X GET  -H "Content-Type: application/json" -d \
'{"command":"top"}'  http://127.0.0.1:8200/Vote


Top posts from a particular community 
curl -i -X GET  -H "Content-Type: application/json" \
-d '{"command":"community", "comm_name":"cool"}'  http://127.0.0.1:8000/Vote

curl -i -X GET  -H "Content-Type: application/json" \
-d '{"command":"community", "comm_name":"cool"}'  http://127.0.0.1:8200/Vote


for posts:
submit posts - 
curl --location --request POST 'http://127.0.0.1:8000/Post' \
--header 'Content-Type: application/json' \
--data-raw '{
    "command": "submit",
    "post_title": "Link to Aiden Pearce",
    "post_id": 1776,
    "post_body": "Could the templars be after him next?",
    "community": "Assasin'\''s Creed",
    "user_id": 47
}'


curl --location --request POST 'http://127.0.0.1:8300/Post' \
--header 'Content-Type: application/json' \
--data-raw '{
    "command": "submit",
    "post_title": "Link to Aiden Pearce",
    "post_id": 1776,
    "post_body": "Could the templars be after him next?",
    "community": "Assasin'\''s Creed",
    "user_id": 47
}'




get a certain post -
curl -i -X GET -H "Content-Type: application/json" \
-d '{"command":"retrieve", "post_id":1776}'  http://127.0.0.1:8000/Post


curl -i -X GET -H "Content-Type: application/json" \
-d '{"command":"retrieve", "post_id":1776}'  http://127.0.0.1:8300/Post


deleta a post -
curl -i -X POST -H "Content-Type: application/json" \
-d '{"command":"delete", "post_id":1776}'  http://127.0.0.1:8000/Post

curl -i -X POST -H "Content-Type: application/json" \
-d '{"command":"delete", "post_id":1776}'  http://127.0.0.1:8300/Post


get recent comunity's posts -
curl -i -X GET -H "Content-Type: application/json" \
-d '{"command": "community", "community": "cool"}'  http://127.0.0.1:8000/Post

curl -i -X GET -H "Content-Type: application/json" \
-d '{"command": "community", "community": "cool"}'  http://127.0.0.1:8300/Post


get recent all posts -
curl -i -X GET -H "Content-Type: application/json" \
-d '{"command":"all"}'  http://127.0.0.1:8000/Post

curl -i -X GET -H "Content-Type: application/json" \
-d '{"command":"all"}'  http://127.0.0.1:8300/Post


get a certain post -
curl -i -X GET -H "Content-Type: application/json" \
-d '{"command":"retrieve", "post_id":1776}'  http://127.0.0.1:8000/Post

curl -i -X GET -H "Content-Type: application/json" \
-d '{"command":"retrieve", "post_id":1776}'  http://127.0.0.1:8300/Post



redis current status

127.0.0.1:6379> hgetall post_id:1202
1) "post_id"
2) "1202"
3) "karma"
4) "4"
5) "upvote"
6) "5"
7) "downvote"
8) "1"


127.0.0.1:6379> hgetall post_id:1313
1) "post_id"
2) "1313"
3) "karma"
4) "1"
5) "upvote"
6) "2"
7) "downvote"
8) "1"

127.0.0.1:6379> hgetall post_id:666
1) "post_id"
2) "666"
3) "karma"
4) "-2"
5) "upvote"
6) "1"
7) "downvote"
8) "3"